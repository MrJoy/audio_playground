---
common_username: &common_username "1234567890"
# Determine HTTP request concurrency for updating lights.  Per-bridge.
max_connects: 3
bridges:
  "Bridge-01": # 0017881226f3
    ip: "192.168.2.10"
    username: *common_username
    debug_hue: 0
  "Bridge-02": # 001788105eda
    ip: "192.168.2.6"
    username: *common_username
    debug_hue: 25000
  "Bridge-03": # 0017881853d0
    ip: "192.168.2.7"
    username: *common_username
    debug_hue: 45000
  "Bridge-04": # 0017881a1d5c
    ip: "192.168.2.9"
    username: *common_username
    debug_hue: 12000
initial_state:
  hue: 49500
  sat: 255
  bri: 127
simulation:
  # TODO: Have day/night configurations and a way to LERP between them.
  #
  # TODO: Tool for testing bulb positioning.
  #
  # TODO: Use mid-point/range notation for intensity to make tweaking easier.
  #
  # TODO: Duck intensity when tweaking saturation.
  #
  # TODO: Finish simulation visualization tool.
  #
  # TODO: Re-parameterize sleep option, and maybe add a way to tweak it on the fly.
  #
  # TODO: Add outer-loop script, and use exit codes to differentiate between restart and terminate.
  #
  # TODO: Way to tweak output transition time on the fly?
  #
  # TODO: Separate color-sweeps per bridge.
  #
  # TODO: Way to tweak sweep transition time on the fly?
  #
  # TODO: Play with X multiplier for Perlin component to see if that makes the lighting more visually interesting.
  #
  # TODO: Group all writes to a bridge into a single thread.
  #
  # TODO: Either self-tune delays, or avoid sending refreshes to each light/group too fast?
  output:
    transition: 0.3
  sweep:
    # Don't set this transition much below 1.0!  ZigBee spec only allows 1
    # group update/sec, but Hue Bridge/lights seem to be OK with about 1 every
    # 0.75 sec...
    #
    # Negative values mean to use a transition time of 0 for the change, but
    # wait the absolute value between steps.
    transition: 1.5
    # Ballpark estimation of Jen's palette:
    values:
    - 49500
    - 49500
    - 48000
    - 49500
    - 49500
    - 51000
  nodes:
    # wave2:
    #   speed: [0.1, 1.0]
    perlin:
      speed: [0.1, 4.0]
    contrast:
      # Function: LINEAR, CUBIC, QUINTIC -- don't bother using iterations > 1
      # with LINEAR, as LINEAR is a no-op.
      function:   cubic
      iterations: 3
  controls:
    exit:
      position: mixer
      colors:
        "color": dark_gray
        "down":  white
    intensity:
      widget: SparkleMotion::LaunchPad::Widgets::VerticalSlider
      positions:
      - [0, 3]
      - [1, 3]
      - [2, 3]
      - [3, 3]
      - [4, 3]
      size: 5
      values:
      # Mid-point, delta (was low/high):
      - [0.000, 0.000]
      - [0.150, 0.075]
      - [0.200, 0.100]
      - [0.400, 0.150]
      - [0.600, 0.200]
      # - [0.350, 0.050] #[0.25, 0.45]
      # - [0.500, 0.050] #[0.40, 0.60]
      # - [0.675, 0.125] #[0.55, 0.80]
      # - [0.875, 0.125] #[0.75, 1.00]
      colors:
        "on":   0x22003F
        "off":  0x05000A
        "down": 0x27103F
    saturation:
      widget: SparkleMotion::LaunchPad::Widgets::VerticalSlider
      transition: 0.3
      positions:
      - [4, 4]
      - [5, 4]
      - [6, 4]
      - [7, 4]
      size: 4
      groups:
      - ["Bridge-01", 0]
      - ["Bridge-02", 0]
      - ["Bridge-03", 0]
      - ["Bridge-04", 0]
      values:
      - 102
      - 152
      - 203
      - 254
      colors:
        "on":   0x1C103F
        "off":  0x03030C
        "down": 0x10103F
    spotlighting:
      x: 0
      y: 0
      mappings:
      # NOTE: Mappings defines the width/height of the widget implicitly!
      # NOTE: Values are indexes into main_lights array.
      #
      # Excluding outermost lights, and going top-down for left-most to
      # right-most light across left then right strings:
      #
      # Bridge 3/4:
      - [14, 15, 16, 17,   18, 19, 20, 21]
      # Bridge 1/2:
      - [ 2, 3,  4,  5,     6,  7,  8,  9]
      colors:
        "on":   0x272700
        "off":  0x020200
        "down": 0x3F3F10
# Main Lights is the group for which the main simulation will be applied.
# It can be any number of lights from any number of bridges but you'll need to
# plan groups out for saturation controls.
main_lights:
# Strip 1:
- ["Bridge-01", 37]
- ["Bridge-01", 36]
- ["Bridge-01", 38]
- ["Bridge-01", 39]
- ["Bridge-01", 40]
- ["Bridge-01", 35]

- ["Bridge-02", 12]
- ["Bridge-02", 21]
- ["Bridge-02", 20]
- ["Bridge-02", 19]
- ["Bridge-02", 15]
- ["Bridge-02", 18]

# Strip 2:
- ["Bridge-03", 2]
- ["Bridge-03", 3]
- ["Bridge-03", 8]
- ["Bridge-03", 10]
- ["Bridge-03", 9]
- ["Bridge-03", 6]

- ["Bridge-04", 7]
- ["Bridge-04", 11]
- ["Bridge-04", 12]
- ["Bridge-04", 1]
- ["Bridge-04", 9]
- ["Bridge-04", 8]
# TODO: Come up with appropriate behaviors/extensions of behavior for dance
# TODO: floor:
# TODO: * Spotighting.
# TODO: * Saturation.
# TODO: * Intensity.
#
# Dance Lights is the group of lights above the dance floor, which will get
# their own simulation, although updates will be interleaved with the main
# lights per-bridge.  It should be a positional map affording spatial
# coherence.
#
# For spotlighting/saturation/intensity purposes, it will be treated as one
# group.
dance_lights:
- ["Bridge-01", 26]
- ["Bridge-02", 11]
- ["Bridge-03", 7]
- ["Bridge-04", 5]
accent_lights:
- ["Bridge-01", 9]
- ["Bridge-01", 10]
- ["Bridge-01", 11]
- ["Bridge-01", 12]
- ["Bridge-01", 13]
- ["Bridge-01", 33]
- ["Bridge-01", 34]
- ["Bridge-02", 7]
- ["Bridge-02", 8]
