#!/usr/bin/env ruby

###############################################################################
# Early Initialization/Helpers
###############################################################################
lib = File.expand_path("../../lib", __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)
require "sparkle_motion"
SparkleMotion.init!("sm-off")
SparkleMotion.use_hue!(api: true)
LOGGER = SparkleMotion.logger
extend SparkleMotion::Hue::HTTP

###############################################################################
# Main
###############################################################################
# TODO: Allow specifying bridges, groups of lights, or just lights.
# TODO: Run this in parallel, one thread per bridge.
requests = CONFIG["bridges"]
           .values
           .map { |bridge| group_update(bridge, 0, payload: { "on" => false }) }
perform_with_retries(requests) do |request, _status, _body|
  LOGGER.info { "Broadcast to all-lights group sent to #{request.bridge['name']}!" }
end
